{"version":3,"file":"static/js/885.8b1051e0.chunk.js","mappings":"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","sources":["components/SearchForm.styled.jsx","components/SearchForm.jsx","Pages/Movies.jsx","api/postAPI.js","components/MovieList.styled.jsx","components/MovieList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormConteiner = styled.div`\n  display: flex;\n`;\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 42px;\n  padding: 5px 10px;\n  border: 2px solid #094067;\n  font-size: 1.2rem;\n  color: #094067;\n  border-radius: 4px;\n  outline: none;\n  box-sizing: border-box;\n  margin-right: 10px;\n  &:focus {\n    border: 3px solid #0485e9;\n    color: #0485e9;\n  }\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  appearance: none;\n  background-image: radial-gradient(\n    100% 100% at 100% 0,\n    #5adaff 0,\n    #5468ff 100%\n  );\n  border: 0;\n  border-radius: 6px;\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, rgba(58, 65, 111, 0.5) 0 -3px 0 inset;\n  box-sizing: border-box;\n  color: #fff;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: 'JetBrains Mono', monospace;\n  height: 48px;\n  justify-content: center;\n  line-height: 1;\n  list-style: none;\n  overflow: hidden;\n  padding-left: 16px;\n  padding-right: 16px;\n  position: relative;\n  text-align: left;\n  text-decoration: none;\n  transition: box-shadow 0.15s, transform 0.15s;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  white-space: nowrap;\n  will-change: box-shadow, transform;\n  font-size: 18px;\n\n  &:focus {\n    box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n  }\n\n  &:hover {\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\n    transform: translateY(-2px);\n  }\n\n  &:active {\n    box-shadow: #3c4fe0 0 3px 7px inset;\n    transform: translateY(2px);\n  }\n`;\n","import { useState } from 'react';\nimport { Button, Form, FormConteiner, Input } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n  const formSubmit = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n  return (\n    <div>\n      <Form onSubmit={formSubmit}>\n        <FormConteiner>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 absolute left-4 translate-y-1/2\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            width={30}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n          </svg>\n\n          <Input\n            type=\"text\"\n            placeholder=\"Enter name of movie...\"\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n        </FormConteiner>\n\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { getMoviesQuery } from 'api/postAPI';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from '../components/MovieList';\nimport SearchForm from 'components/SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchWord = searchParams.get('searchWord');\n\n  useEffect(() => {\n    setStatus('loading');\n    if (searchWord)\n      getMoviesQuery(searchWord)\n        .then(({ data }) => {\n          setMovies(data.results);\n          setStatus('fulfilled');\n        })\n        .catch(setStatus('error'))\n        .finally(setStatus('idle'));\n  }, [searchWord]);\n\n  const handleFormSubmit = value => {\n    setSearchParams({ searchWord: value });\n  };\n\n  if (status === 'idle') {\n    return <h1> Loading...</h1>;\n  }\n\n  if (status === 'error') {\n    return <h1> Smth went wrong. Eror 404</h1>;\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>Search movie</h1>\n        <SearchForm onSubmit={handleFormSubmit} />\n      </div>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76c682e9d9d34956306f5842e1234b80';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getMoviesCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMoviesReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getMoviesQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ListMovie = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  list-style: none;\n\n  gap: 30px;\n`;\n\nexport const MovieItem = styled.li`\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  transition: transform 250ms;\n  transform: scale(1);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 20px;\n\n  margin-bottom: 10px;\n  margin-top: 0;\n  color: #010203;\n`;\n\nexport const Text = styled.h2`\n  font-size: 15px;\n  margin-bottom: 10px;\n  font-weight: 200;\n  color: #242a2f;\n`;\n","import { generatePath, useLocation } from 'react-router-dom';\nimport { PATH } from 'router/Path';\nimport {\n  ListMovie,\n  MovieImg,\n  MovieItem,\n  MovieLink,\n  Text,\n  Title,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ListMovie>\n      {movies &&\n        movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <MovieLink\n              to={generatePath(PATH.MovieDetails, {\n                movieId: movie.id,\n              })}\n              state={{ from: location }}\n            >\n              <MovieImg\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <div>\n                <Title>{movie.title}</Title>\n                <Text>{movie.release_date}</Text>\n              </div>\n            </MovieLink>\n          </MovieItem>\n        ))}\n    </ListMovie>\n  );\n};\n\nexport default MovieList;\n"],"names":["FormConteiner","styled","Form","Input","Button","onSubmit","useState","inputValue","setInputValue","e","preventDefault","xmlns","className","fill","viewBox","stroke","width","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","value","onChange","target","movies","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","searchWord","get","useEffect","getMoviesQuery","then","data","results","catch","finally","MovieList","BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","id","getMoviesCast","getMoviesReviews","query","ListMovie","MovieItem","MovieLink","Link","MovieImg","Title","Text","location","useLocation","map","movie","to","generatePath","PATH","movieId","state","from","src","poster_path","alt","title","release_date"],"sourceRoot":""}