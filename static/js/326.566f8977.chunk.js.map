{"version":3,"file":"static/js/326.566f8977.chunk.js","mappings":"oRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,GAC5D,EAEYG,EAAe,SAAAC,GAC1B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,oBAA6CJ,GACrD,EAEYK,EAAgB,SAAAD,GAC3B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,4BAAqDJ,GAC7D,EAEYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,4BAAqDJ,GAC7D,EAEYO,EAAiB,SAAAC,GAC5B,OAAON,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,kBACgDQ,EADhD,wBAGR,C,6HCbD,EAZgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,wBACGA,EAAQC,KAAI,SAAAC,GAAM,OACjB,2BACE,yCAAeA,EAAOC,WACtB,uBAAID,EAAOE,YAFJF,EAAOP,GADC,KAQxB,E,kBC8BD,EApCoB,WAClB,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOL,EAAP,KAAgBM,EAAhB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,WACV,IAAMI,EAAU,mCAAG,WAAMjB,GAAN,mGAEQE,EAAAA,EAAAA,IAAiBF,GAFzB,gBAEPkB,EAFO,EAEPA,KAERP,EAAWO,EAAKC,SAChBN,EAAU,aALK,gDAOfA,EAAU,SAPK,qGAAH,sDAYhBI,EAAWH,EACZ,GAAE,CAACA,IAEW,SAAXF,GACK,wCAEM,UAAXA,GACK,wDAIP,yBACsB,IAAnBP,EAAQe,QAAe,SAAC,EAAD,CAASf,QAASA,KAAc,uCAG7D,C,sBCvCD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/postAPI.js","components/Reviews.jsx","components/ReviewsInfo.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76c682e9d9d34956306f5842e1234b80';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getMoviesCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMoviesReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getMoviesQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n};\n","const Reviews = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <p>{`Author: ${review.author}`}</p>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Reviews;\n","import { getMoviesReviews } from 'api/postAPI';\nimport Reviews from 'components/Reviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst ReviewsInfo = () => {\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('loading');\n    const getReviews = async id => {\n      try {\n        const { data } = await getMoviesReviews(id);\n\n        setReviews(data.results);\n        setStatus('fulfilled');\n      } catch {\n        setStatus('error');\n      } finally {\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n\n  if (status === 'idle') {\n    return <h1> Loading...</h1>;\n  }\n  if (status === 'error') {\n    return <h1> Smth went wrong. Eror 404</h1>;\n  }\n\n  return (\n    <div>\n      {reviews.length !== 0 ? <Reviews reviews={reviews} /> : <p>Loading...</p>}\n    </div>\n  );\n};\n\nexport default ReviewsInfo;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","id","getMoviesCast","getMoviesReviews","getMoviesQuery","query","reviews","map","review","author","content","useState","setReviews","status","setStatus","movieId","useParams","useEffect","getReviews","data","results","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}