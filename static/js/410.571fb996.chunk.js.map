{"version":3,"file":"static/js/410.571fb996.chunk.js","mappings":"oRAEMA,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,GAC5D,EAEYG,EAAe,SAAAC,GAC1B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,oBAA6CJ,GACrD,EAEYK,EAAgB,SAAAD,GAC3B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,4BAAqDJ,GAC7D,EAEYM,EAAmB,SAAAF,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BK,EAA/B,4BAAqDJ,GAC7D,EAEYO,EAAiB,SAAAC,GAC5B,OAAON,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,kBACgDQ,EADhD,wBAGR,C,gJCvBYC,EAAWC,EAAAA,GAAAA,GAAH,6HAORC,EAAaD,EAAAA,GAAAA,GAAH,0FAMVE,EAAgBF,EAAAA,GAAAA,IAAH,kFAMbG,EAAeH,EAAAA,GAAAA,IAAH,yHAOZI,EAAgBJ,EAAAA,GAAAA,EAAH,8G,SCM1B,EA1Ba,SAAC,GAAe,IAAbK,EAAY,EAAZA,MACd,OACE,SAACN,EAAD,UACGM,EAAMC,KAAI,SAAAC,GAAI,OACb,SAACN,EAAD,WACE,UAACE,EAAD,YACGI,EAAKC,cACJ,SAACN,EAAD,CACEO,IAAG,yCAAoCF,EAAKC,cAC5CE,IAAKH,EAAKI,SASd,UAACP,EAAD,eAAiBG,EAAKI,SACtB,SAACP,EAAD,UAAgBG,EAAKK,gBAfRL,EAAKb,GADT,KAsBpB,E,kBCOD,EAlCiB,WACf,OAAwBmB,EAAAA,EAAAA,UAAS,IAAjC,eAAON,EAAP,KAAaO,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,EAAU,WACV,IAAMI,EAAO,mCAAG,WAAM1B,GAAN,mGAEWC,EAAAA,EAAAA,IAAcD,GAFzB,gBAEJ2B,EAFI,EAEJA,KAERP,EAAQO,EAAKd,MACbS,EAAU,aALE,gDAOZA,EAAU,SAPE,qGAAH,sDAYbI,EAAQH,EACT,GAAE,CAACA,IAEW,SAAXF,GACK,wCAEM,UAAXA,GACK,wDAIP,yBAAsB,IAAhBR,EAAKe,QAAe,SAAC,EAAD,CAAMjB,MAAOE,KAAW,uCAErD,C,sBCtCD,SAASgB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["api/postAPI.js","components/Movie/AddinionalInfo/Cast.styled.jsx","components/Movie/AddinionalInfo/Cast.jsx","components/Movie/AddinionalInfo/CastInfo.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76c682e9d9d34956306f5842e1234b80';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getMoviesCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMoviesReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getMoviesQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n};\n","import styled from 'styled-components';\n\nexport const CastItem = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport const CastItemLi = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const CastItemImage = styled.img`\n  width: 185px;\n  height: 278px;\n  margin-right: 20px;\n`;\n\nexport const CastItemText = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const CastItemTextP = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 10px;\n  margin-top: 0;\n  font-weight: bold;\n`;\n","import {\n  CastItem,\n  CastItemImage,\n  CastItemLi,\n  CastItemText,\n  CastItemTextP,\n} from './Cast.styled';\n\nconst Cast = ({ casts }) => {\n  return (\n    <CastItem>\n      {casts.map(cast => (\n        <CastItemLi key={cast.id}>\n          <CastItemText>\n            {cast.profile_path ? (\n              <CastItemImage\n                src={`https://image.tmdb.org/t/p/w185${cast.profile_path}`}\n                alt={cast.name}\n              />\n            ) : (\n              <CastItemImage\n                src={`https://image.tmdb.org/t/p/w185${cast.profile_path}`}\n                alt={cast.name}\n              />\n            )}\n\n            <CastItemTextP> {cast.name}</CastItemTextP>\n            <CastItemTextP>{cast.character}</CastItemTextP>\n          </CastItemText>\n        </CastItemLi>\n      ))}\n    </CastItem>\n  );\n};\nexport default Cast;\n","import { getMoviesCast } from 'api/postAPI';\nimport Cast from './Cast';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst CastInfo = () => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus('loading');\n    const getCast = async id => {\n      try {\n        const { data } = await getMoviesCast(id);\n\n        setCast(data.cast);\n        setStatus('fulfilled');\n      } catch {\n        setStatus('error');\n      } finally {\n      }\n    };\n\n    getCast(movieId);\n  }, [movieId]);\n\n  if (status === 'idle') {\n    return <h1> Loading...</h1>;\n  }\n  if (status === 'error') {\n    return <h1> Smth went wrong. Eror 404</h1>;\n  }\n\n  return (\n    <div>{cast.length !== 0 ? <Cast casts={cast} /> : <p>Loading...</p>}</div>\n  );\n};\n\nexport default CastInfo;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","id","getMoviesCast","getMoviesReviews","getMoviesQuery","query","CastItem","styled","CastItemLi","CastItemImage","CastItemText","CastItemTextP","casts","map","cast","profile_path","src","alt","name","character","useState","setCast","status","setStatus","movieId","useParams","useEffect","getCast","data","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}