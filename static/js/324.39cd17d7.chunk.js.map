{"version":3,"file":"static/js/324.39cd17d7.chunk.js","mappings":"8PAgCA,EA7BkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,IAAIH,IAEV,wBACGD,GACCA,EAAOK,KAAI,SAAAC,GAAK,OACd,yBACE,UAAC,KAAD,CACEC,IAAIC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,aAAmB,CAClCC,QAASJ,EAAMK,KAEjBC,MAAO,CAAEC,KAAMZ,GAJjB,WAME,gBACEa,IAAG,yCAAoCR,EAAMS,aAC7CC,IAAKV,EAAMW,SAEb,4BACE,wBAAKX,EAAMW,SACX,0BAAOX,EAAMY,sBAbVZ,EAAMK,GADD,KAqBvB,ECaD,EAzCmB,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACpB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAMA,OACE,0BACE,kBAAMH,SAPS,SAAAI,GACjBA,EAAEC,iBACFL,EAASE,GACTC,EAAc,GACf,EAGG,WACE,4BACE,gBACEG,MAAM,6BACNC,UAAU,0CACVC,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPC,MAAO,GANT,UAQE,iBACEC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,mDAIN,kBACEC,KAAK,OACLC,YAAY,yBACZC,MAAOhB,EACPiB,SAAU,SAAAf,GAAC,OAAID,EAAcC,EAAEgB,OAAOF,MAA3B,QAIf,mBAAQF,KAAK,SAAb,wBAIP,ECKD,EAvCe,WACb,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAewC,EAAf,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,QAArC,eAAOqB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,eAEpCC,EAAAA,EAAAA,YAAU,WACRN,EAAU,WACNI,IACFG,EAAAA,EAAAA,IAAeH,GACZI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPX,EAAUW,EAAKC,SACfV,EAAU,YACX,IACAW,MAAMX,EAAU,UAChBY,QAAQZ,EAAU,QACxB,GAAE,CAACI,IAMJ,MAAe,SAAXL,GACK,wCAGM,UAAXA,GACK,wDAIP,4BACE,0CACA,SAAC,EAAD,CAAYtB,SAfS,SAAAkB,GACvBQ,EAAgB,CAAEC,WAAYT,GAC/B,KAcG,SAAC,EAAD,CAAWrC,OAAQA,MAGxB,C,oKC1CKuD,EAAW,+BACXC,EAAU,mCAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,GAC5D,EAEYG,EAAe,SAAAhD,GAC1B,OAAO+C,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B5C,EAA/B,oBAA6C6C,GACrD,EAEYI,EAAgB,SAAAjD,GAC3B,OAAO+C,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B5C,EAA/B,4BAAqD6C,GAC7D,EAEYK,EAAmB,SAAAlD,GAC9B,OAAO+C,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+B5C,EAA/B,4BAAqD6C,GAC7D,EAEYP,EAAiB,SAAAa,GAC5B,OAAOJ,EAAAA,EAAAA,IAAA,UACFH,EADE,iCAC+BC,EAD/B,kBACgDM,EADhD,wBAGR,C","sources":["components/MovieList.jsx","Pages/SearchForm.jsx","Pages/Movies.jsx","api/postAPI.js"],"sourcesContent":["import { generatePath, Link, useLocation } from 'react-router-dom';\nimport { PATH } from 'router/Path';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(location);\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link\n              to={generatePath(PATH.MovieDetails, {\n                movieId: movie.id,\n              })}\n              state={{ from: location }}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <div>\n                <h2>{movie.title}</h2>\n                <span>{movie.release_date}</span>\n              </div>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n  const formSubmit = e => {\n    e.preventDefault();\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n  return (\n    <div>\n      <form onSubmit={formSubmit}>\n        <div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 absolute left-4 translate-y-1/2\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            width={16}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n          </svg>\n\n          <input\n            type=\"text\"\n            placeholder=\"Enter name of movie...\"\n            value={inputValue}\n            onChange={e => setInputValue(e.target.value)}\n          />\n        </div>\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { getMoviesQuery } from 'api/postAPI';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from '../components/MovieList';\nimport SearchForm from './SearchForm';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchWord = searchParams.get('searchWord');\n\n  useEffect(() => {\n    setStatus('loading');\n    if (searchWord)\n      getMoviesQuery(searchWord)\n        .then(({ data }) => {\n          setMovies(data.results);\n          setStatus('fulfilled');\n        })\n        .catch(setStatus('error'))\n        .finally(setStatus('idle'));\n  }, [searchWord]);\n\n  const handleFormSubmit = value => {\n    setSearchParams({ searchWord: value });\n  };\n\n  if (status === 'idle') {\n    return <h1> Loading...</h1>;\n  }\n\n  if (status === 'error') {\n    return <h1> Smth went wrong. Eror 404</h1>;\n  }\n\n  return (\n    <div>\n      <h1>Search movie</h1>\n      <SearchForm onSubmit={handleFormSubmit} />\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '76c682e9d9d34956306f5842e1234b80';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const getMoviesCast = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const getMoviesReviews = id => {\n  return axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`);\n};\n\nexport const getMoviesQuery = query => {\n  return axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n};\n"],"names":["movies","location","useLocation","console","log","map","movie","to","generatePath","PATH","movieId","id","state","from","src","poster_path","alt","title","release_date","onSubmit","useState","inputValue","setInputValue","e","preventDefault","xmlns","className","fill","viewBox","stroke","width","strokeLinecap","strokeLinejoin","strokeWidth","d","type","placeholder","value","onChange","target","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","searchWord","get","useEffect","getMoviesQuery","then","data","results","catch","finally","BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","getMoviesCast","getMoviesReviews","query"],"sourceRoot":""}